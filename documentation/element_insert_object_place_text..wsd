@startuml
title Select Connected Object Records Place / Text)

|UI|
start
note right
This action will happen
regularly in different
types of views, e.g.
- ingest Book
- ingest Artwork
- edit Artwork
- create/edit Iconography
- create/edit Object
endnote
note right
Each view has fields
for entering those
objects that are
appropriate for the
records, and for each
object a list of 
connection types
endnote
note right
Places and Texts are Objects
in a hierarchical structure
(e.g., town > building > 
building part). Normally, a 
high-level record (Town / Book)
would be loaded with all its 
child records and the fitting 
child record then chosen - or 
made, if it does not exist. 
endnote
:Select connection types
from list;
note right
this can be done now 
or later
endnote
:Start typing name
of Object;

repeat
    :Once a minimum of letters
    has been typed, they are
    sent to BFF for Autocomplete, 
    together with the type of the
    Object;
    |BFF|
    :launches search in DB for
    Objects whose name  
    contains this string;
    repeat 
        |DB|
        :search;
        |BFF|   
    repeat while (if any record has 
    Child records, they are
    searched)

    :All found records and their
    Child records are sent to UI;
    |UI|
    :Display result;
repeat while (User continues typing)
    :processes search result
    for display;
    note right
    if there is a list of hits,
    a line 'none of these' is
    added; if there are no hits,
    a line 'nothing found'
    is added (called 'search failed')
    endnote

:User selects item from list;
if (User selects) then (result)

else (search failed)
    :Launch external search;
    note right
    The external search takes
    several seconds; hence it 
    is better to launch it not
    automatically but let the 
    user launch it for all
    objects with search failed
    endnote
    :Send search string and
    Object Type to BFF;
    |BFF|
    :Launch search in 
    appropriate external
    database (e.g., GND);
    :parse search results;
    :return search results
    to UI;
    note right
    Again with notes for
    search failed
    endnote
    |UI|
    :Display result;
    if (User selects) then (result)
        
    else (search failed)
        :Save all data from this view in FE;
        :Open view Create Object
        for appropriate Object type;
        :Once Object has been created,
        return to this view;
        :restore stored data;
        :automatically insert 
        newly-created object;
    endif
    endif
    :user may add/edit child records
    and select relation to 
    parent record;
    note right
    only the child record type 
    (e.g., 'building part') and
    its name can be entered here; 
    to fill more fields, one has 
    to go to an Edit Object form
    (and back here)
    endnote
    
        end


@enduml